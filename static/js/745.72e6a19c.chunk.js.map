{"version":3,"file":"static/js/745.72e6a19c.chunk.js","mappings":"+OAKe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAACC,GACpB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACN,IAAK,QACHN,EAASO,GACT,MAEF,IAAK,WACHL,EAAYK,GACZ,MAEF,QACEC,QAAQC,KAAR,8BAAoCH,EAApC,wBAWN,OACE,iBAAKI,UAAU,eAAf,WACE,eAAIA,UAAU,aAAd,yBAEA,kBAAMA,UAAU,YAAYC,SAXX,SAACP,GACpBA,EAAMQ,iBACNhB,GAASiB,EAAAA,EAAAA,IAAM,CAAEd,MAAAA,EAAOE,SAAAA,KACxBD,EAAS,IACTE,EAAY,KAO0CY,aAAa,MAAjE,WACE,mBAAOJ,UAAU,cAAjB,kBAEE,kBACEA,UAAU,aACVK,KAAK,QACLT,KAAK,QACLC,MAAOR,EACPiB,SAAUb,QAId,mBAAOO,UAAU,cAAjB,sBAEE,kBACEA,UAAU,aACVK,KAAK,WACLT,KAAK,WACLC,MAAON,EACPe,SAAUb,QAId,mBAAQO,UAAU,SAASK,KAAK,SAAhC,4B,iECxDO,SAASE,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,IAAIG,EAAY,MAAPJ,EAAc,KAAyB,qBAAXK,QAA0BL,EAAIK,OAAOC,WAAaN,EAAI,cAE3F,GAAU,MAANI,EAAJ,CACA,IAIIG,EAAIC,EAJJC,EAAO,GACPC,GAAK,EACLC,GAAK,EAIT,IACE,IAAKP,EAAKA,EAAGQ,KAAKZ,KAAQU,GAAMH,EAAKH,EAAGS,QAAQC,QAC9CL,EAAKM,KAAKR,EAAGlB,QAETY,GAAKQ,EAAKO,SAAWf,GAH4BS,GAAK,IAK5D,MAAOO,GACPN,GAAK,EACLH,EAAKS,EACL,QACA,IACOP,GAAsB,MAAhBN,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIO,EAAI,MAAMH,GAIlB,OAAOC,GFtBuB,CAAqBT,EAAKC,KAAM,EAAAiB,EAAA,GAA2BlB,EAAKC,IGLjF,WACb,MAAM,IAAIkB,UAAU,6IHIgF","sources":["views/LoginView.js","../javascript/esm|E:/Study/IT/programming/projects_react/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../javascript/esm|E:/Study/IT/programming/projects_react/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../javascript/esm|E:/Study/IT/programming/projects_react/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../javascript/esm|E:/Study/IT/programming/projects_react/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { logIn } from \"../redux/auth/auth-operations\";\n//import '../styles/pages.scss';\n\nexport default function LoginPage() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    switch (name) {\n      case \"email\":\n        setEmail(value);\n        break;\n\n      case \"password\":\n        setPassword(value);\n        break;\n\n      default:\n        console.warn(`This type of name - ${name} doesn't work out`);\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch(logIn({ email, password }));\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <div className=\"loginWrapper\">\n      <h1 className=\"page-title\">Login Page</h1>\n\n      <form className=\"loginForm\" onSubmit={handleSubmit} autoComplete=\"off\">\n        <label className=\"input_label\">\n          Mail\n          <input\n            className=\"form_input\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label className=\"input_label\">\n          Password\n          <input\n            className=\"form_input\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button className=\"button\" type=\"submit\">\n          Log in\n        </button>\n      </form>\n    </div>\n  );\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["LoginPage","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","event","target","name","value","console","warn","className","onSubmit","preventDefault","logIn","autoComplete","type","onChange","_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","length","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}