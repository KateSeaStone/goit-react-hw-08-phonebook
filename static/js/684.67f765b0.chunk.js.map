{"version":3,"file":"static/js/684.67f765b0.chunk.js","mappings":"+OAIe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAACC,GACpB,MAAwBA,EAAMC,OAAtBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MACd,OAAQT,GACN,IAAK,OACHC,EAAQQ,GACR,MAEF,IAAK,QACHN,EAASM,GACT,MAEF,IAAK,WACHJ,EAAYI,GACZ,MAEF,QACEC,QAAQC,KAAR,8BAAoCX,EAApC,wBAYN,OACE,4BACE,eAAIY,UAAU,aAAd,gCAEA,kBAAMC,SAZW,SAACN,GACpBA,EAAMO,iBACNjB,GAASkB,EAAAA,EAAAA,IAAS,CAAEf,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACjCH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAOoBW,aAAa,MAA3C,WACE,gBAAKJ,UAAU,kBAAf,UACE,qCAEE,kBACEA,UAAU,eACVK,KAAK,OACLC,YAAY,kBACZlB,KAAK,OACLS,MAAOT,EACPmB,SAAUb,UAKhB,gBAAKM,UAAU,kBAAf,UACE,sCAEE,kBACEA,UAAU,eACVK,KAAK,QACLC,YAAY,mBACZlB,KAAK,QACLS,MAAOP,EACPiB,SAAUb,UAKhB,gBAAKM,UAAU,kBAAf,UACE,yCAEE,kBACEA,UAAU,eACVK,KAAK,WACLC,YAAY,WACZlB,KAAK,WACLS,MAAOL,EACPe,SAAUb,UAKhB,mBAAQM,UAAU,kBAAkBK,KAAK,SAAzC,8B,iECjFO,SAASG,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,IAAIG,EAAY,MAAPJ,EAAc,KAAyB,qBAAXK,QAA0BL,EAAIK,OAAOC,WAAaN,EAAI,cAE3F,GAAU,MAANI,EAAJ,CACA,IAIIG,EAAIC,EAJJC,EAAO,GACPC,GAAK,EACLC,GAAK,EAIT,IACE,IAAKP,EAAKA,EAAGQ,KAAKZ,KAAQU,GAAMH,EAAKH,EAAGS,QAAQC,QAC9CL,EAAKM,KAAKR,EAAGnB,QAETa,GAAKQ,EAAKO,SAAWf,GAH4BS,GAAK,IAK5D,MAAOO,GACPN,GAAK,EACLH,EAAKS,EACL,QACA,IACOP,GAAsB,MAAhBN,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIO,EAAI,MAAMH,GAIlB,OAAOC,GFtBuB,CAAqBT,EAAKC,KAAM,EAAAiB,EAAA,GAA2BlB,EAAKC,IGLjF,WACb,MAAM,IAAIkB,UAAU,6IHIgF","sources":["views/RegisterView.js","../javascript/esm|E:/Study/IT/programming/projects_react/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../javascript/esm|E:/Study/IT/programming/projects_react/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../javascript/esm|E:/Study/IT/programming/projects_react/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../javascript/esm|E:/Study/IT/programming/projects_react/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { register } from \"../redux/auth/auth-operations\";\n\nexport default function RegisterPage() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"email\":\n        setEmail(value);\n        break;\n\n      case \"password\":\n        setPassword(value);\n        break;\n\n      default:\n        console.warn(`This type of name - ${name} doesn't work out`);\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch(register({ name, email, password }));\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <div>\n      <h2 className=\"page-title\">Registration page</h2>\n\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <div className=\"form-group mb-2\">\n          <label>\n            Name\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Enter your name\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n            />\n          </label>\n        </div>\n\n        <div className=\"form-group mb-2\">\n          <label>\n            Email\n            <input\n              className=\"form-control\"\n              type=\"email\"\n              placeholder=\"Enter your email\"\n              name=\"email\"\n              value={email}\n              onChange={handleChange}\n            />\n          </label>\n        </div>\n\n        <div className=\"form-group mb-2\">\n          <label>\n            Password\n            <input\n              className=\"form-control\"\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n            />\n          </label>\n        </div>\n\n        <button className=\"btn btn-primary\" type=\"submit\">\n          Register\n        </button>\n      </form>\n    </div>\n  );\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["RegisterPage","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","event","target","value","console","warn","className","onSubmit","preventDefault","register","autoComplete","type","placeholder","onChange","_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","length","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}