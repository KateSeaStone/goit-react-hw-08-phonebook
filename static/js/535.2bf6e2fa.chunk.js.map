{"version":3,"file":"static/js/535.2bf6e2fa.chunk.js","mappings":"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","sources":["components/ContactListItem/ContactListItem.js","redux/Contacts/contacts-selectors.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","views/ContactsView.js","../javascript/esm|E:/Study/IT/programming/projects_react/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../javascript/esm|E:/Study/IT/programming/projects_react/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../javascript/esm|E:/Study/IT/programming/projects_react/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../javascript/esm|E:/Study/IT/programming/projects_react/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ContactListItem.scss\";\n\nconst ContactListItem = ({ id, name, number, onDelete }) => {\n  return (\n    <li key={id} className=\"item\">\n      <div className=\"mb-2 \">\n        {name}: {number}\n      </div>\n      <button\n        className=\"btn btn-primary btn-sm m-lg-2\"\n        type=\"button\"\n        onClick={() => onDelete(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","export const getContacts = (state) => {\n  return state.contacts.items;\n};\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getFilteredContacts = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\n\nimport { getFilteredContacts } from \"../../redux/Contacts/contacts-selectors\";\nimport {\n  deleteContact,\n  fetchContacts,\n} from \"../../redux/Contacts/contacts-operations\";\n\nexport default function ContactList() {\n  const contacts = useSelector(getFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDelete = (id) => dispatch(deleteContact(id));\n\n  return (\n    <ul className=\"list-group\">\n      {contacts.map((contact) => (\n        <ContactListItem\n          key={contact.id}\n          id={contact.id}\n          name={contact.name}\n          number={contact.number}\n          onDelete={onDelete}\n        />\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onDelete: PropTypes.func,\n};\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addContact } from \"../../redux/Contacts/contacts-operations\";\nimport { getContacts } from \"../../redux/Contacts/contacts-selectors\";\n\nexport default function ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const contacts = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n  const onSubmit = (name, number) => dispatch(addContact({ name, number }));\n\n  const handleChange = (event) => {\n    switch (event.target.name) {\n      case \"name\":\n        setName(event.target.value);\n        break;\n      case \"number\":\n        setNumber(event.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const normalizedName = contacts.map((contact) =>\n      contact.name.toLowerCase()\n    );\n\n    if (normalizedName.includes(name.toLowerCase())) {\n      alert(`${name} is already in contacts`);\n    } else {\n      onSubmit(name, number);\n    }\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group mb-2\">\n        <label>\n          Name\n          <input\n            className=\"form-control\"\n            placeholder=\"Enter a name\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n      </div>\n\n      <div className=\"form-group mb-4\">\n        <label>\n          Number\n          <input\n            className=\"form-control\"\n            placeholder=\"Enter a number\"\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary mb-5\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeFilter } from \"../../redux/Contacts/contacts-actions\";\nimport { getFilter } from \"../../redux/Contacts/contacts-selectors\";\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChange = (event) => dispatch(changeFilter(event.target.value));\n\n  return (\n    <div className=\"form-group mb-2\">\n      <label>\n        Find contact by name\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import ContactList from \"../components/ContactList/ContactList\";\nimport ContactForm from \"../components/ContactForm/ContactForm\";\nimport Filter from \"../components/Filter/Filter\";\nimport \"../styles/ContactsView.scss\";\n\nexport default function ContactsPage() {\n  return (\n    <div className=\"contactsViewContainer\">\n      <ContactForm />\n\n      <ContactList />\n      <Filter />\n    </div>\n  );\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["id","name","number","onDelete","className","type","onClick","getContacts","state","contacts","items","getFilter","filter","getFilteredContacts","normalizedFilter","toLowerCase","contact","includes","ContactList","useSelector","dispatch","useDispatch","useEffect","fetchContacts","deleteContact","map","ContactForm","useState","setName","setNumber","handleChange","event","target","value","reset","onSubmit","preventDefault","alert","addContact","placeholder","onChange","pattern","title","required","Filter","changeFilter","ContactsPage","_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","length","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}